<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jackson.db.dao.ProxyDao">
    <resultMap id="ipResultMap" type="Proxy">
        <result property="id" column="id"/>
        <result property="host" column="host"/>
        <result property="port" column="port"/>
        <result property="acquisitionTime" column="acquisition_time"/>
        <result property="lastTestTime" column="last_test_time"/>
        <result property="lastAvailableTime" column="last_available_time"/>
        <result property="address" column="address"/>
        <result property="useTimes" column="use_times"/>
        <result property="speed" column="speed"/>
        <result property="state" column="state"/>
        <result property="testCount" column="test_count"/>
        <result property="availableCount" column="available_count"/>
        <result property="protocolState" column="protocol_state"/>
    </resultMap>



<!--    <insert id="insertsIgnore">
        insert IGNORE ${tableName}
        (`host`,`port`,`last_test_time`,`last_available_time`,`address`,use_times,`speed`,`state`,`test_count`,`available_count`,`protocol_state`)VALUES
        <foreach collection="list" index="index" item="i" separator=",">
            (#{i.host},#{i.port},#{i.lastTestTime},#{i.lastAvailableTime},#{i.address},#{i.useTimes},#{i.speed},
            #{i.state},#{i.testCount},#{i.availableCount},#{i.protocolState})
        </foreach>
    </insert>-->


        <insert id="insertsIgnore" >
            insert into ${tableName}
            (`host`,`port`,`last_test_time`,`last_available_time`,`address`,`use_times`,`speed`,`state`,`test_count`,`available_count`,`protocol_state`)
            <foreach collection="list" index="index" item="i" separator="UNION ">
                SELECT #{i.host},#{i.port},#{i.lastTestTime},#{i.lastAvailableTime},#{i.address},#{i.useTimes},#{i.speed},
                #{i.state},#{i.testCount},#{i.availableCount},#{i.protocolState}
                FROM DUAL
                WHERE NOT EXISTS(
                SELECT `id`
                FROM ${tableName}
                WHERE `port`=#{i.port} and `host`=#{i.host})
            </foreach>
        </insert>


    <select id="findFreeMinTestTime" resultMap="ipResultMap">
        select * FROM ${tableName} WHERE `state`= 0 ORDER BY `test_count` ASC LIMIT 0,#{size}
    </select>

    <select id="findFreeMaxSpeed"  resultMap="ipResultMap">
        select * FROM ${tableName} WHERE `state`=0 AND `speed` >0 ORDER BY `speed` ASC LIMIT 0,#{size}
    </select>


    <update id="update">
        UPDATE ${tableName} SET
        `host`=#{proxy.host},
        `port`=#{proxy.port},
        `last_test_time`=#{proxy.lastTestTime},
        `last_available_time`=#{proxy.lastAvailableTime},
        `address`=#{proxy.address},
        `use_times`=#{proxy.useTimes},
        `speed`=#{proxy.speed},
        `state`=#{proxy.state},
        `test_count`=#{proxy.testCount},
        `available_count`=#{proxy.availableCount},
        `protocol_state`=#{proxy.protocolState}
        WHERE id=#{proxy.id}
    </update>

    <update id="update2TakenOut">
        UPDATE ${tableName} SET `state` = 1 WHERE `id` IN(
        <foreach collection="list" index="index" item="item" separator=",">
            #{item.id}
        </foreach>)
    </update>


    <update id="setTakeState2Free">
        UPDATE ${tableName} SET `state` = 0 WHERE `state` = 1
    </update>

    <update id="createTable">
CREATE TABLE IF NOT EXISTS ${tableName} (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `host` varchar(20) NOT NULL,
  `port` smallint(6) NOT NULL,
  `acquisition_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `last_test_time` bigint(20) DEFAULT '0',
  `last_available_time` bigint(20) DEFAULT NULL,
  `address` varchar(20) DEFAULT NULL,
  `use_times` tinyint(4) DEFAULT '0',
  `speed` bigint(20) DEFAULT '-1',
  `state` tinyint(4) NOT NULL DEFAULT '0',
  `test_count` smallint(6) DEFAULT '0',
  `available_count` smallint(6) NOT NULL DEFAULT '0',
  `protocol_state` TINYINT(1) DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `host` (`host`,`port`),
  KEY `test_count` (`test_count`,`state`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8
    </update>

</mapper>

